{"ast":null,"code":"var _jsxFileName = \"/home/user/test-project/client/src/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from 'react-paginate';\nimport React, { useEffect, useState } from 'react';\nimport { CardGroup, Row, FormControl, Col, Card, Button } from 'react-bootstrap';\nimport Header from './Header';\nimport './components/Topbar/bootstrap.min.css';\nimport Axios from \"axios\";\nimport Product from \"./Product\";\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Products() {\n  _s();\n\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const productsPerPage = 8;\n  const visitedPages = pageNumber * productsPerPage;\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState([]);\n  let {\n    search\n  } = useParams();\n  const displayProducts = products.slice(visitedPages, visitedPages + productsPerPage).map(product => {\n    return /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, product.prodid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  const displayFilteredProducts = output.map(filteredProducts => {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          style: {\n            width: '18rem',\n            height: '18rem'\n          },\n          variant: \"top\",\n          src: 'http://localhost:5000/images/' + filteredProducts.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: filteredProducts.product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/products/${filteredProducts.prodid}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, filteredProducts.prodid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  });\n  useEffect(() => {\n    Axios.get('/products').then(res => {\n      setProducts(res.data.data.products);\n    });\n  }, []);\n  const pageCount = Math.ceil(products.length / productsPerPage);\n\n  const pageChange = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  search = input;\n  useEffect(() => {\n    Axios.get(`/products/input/${search}`).then(res => {\n      setOutput(res.data.data.filteredProducts);\n    });\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      title: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: \"1000px\",\n            marginLeft: \"10%\",\n            display: \"flex\"\n          },\n          className: \"search\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\",\n          onChange: e => setInput(e.target.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: input.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: displayProducts\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [console.log(output), displayFilteredProducts]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakClassName: 'page-item',\n        breakLinkClassName: 'page-link',\n        containerClassName: 'pagination',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        previousClassName: 'page-item',\n        previousLinkClassName: 'page-link',\n        nextClassName: 'page-item',\n        nextLinkClassName: 'page-link',\n        activeClassName: 'active',\n        pageCount: pageCount,\n        onPageChange: pageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Products, \"23ZDpLaVJuSBSwE+f0wSG7Cvjrs=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/user/test-project/client/src/Products.jsx"],"names":["ReactPaginate","React","useEffect","useState","CardGroup","Row","FormControl","Col","Card","Button","Header","Axios","Product","useParams","useNavigate","Link","Products","navigate","products","setProducts","pageNumber","setPageNumber","productsPerPage","visitedPages","input","setInput","output","setOutput","search","displayProducts","slice","map","product","prodid","displayFilteredProducts","filteredProducts","width","height","img","get","then","res","data","pageCount","Math","ceil","length","pageChange","selected","marginLeft","display","e","target","value","toLowerCase","flexDirection","console","log"],"mappings":"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","sourcesContent":["import ReactPaginate from 'react-paginate'\nimport React, { useEffect, useState } from 'react'\nimport { CardGroup, Row, FormControl, Col, Card, Button } from 'react-bootstrap';\nimport Header from './Header';\nimport './components/Topbar/bootstrap.min.css';\nimport Axios from \"axios\";\nimport Product from \"./Product\";\nimport { useParams, useNavigate, Link } from 'react-router-dom';\n\nexport default function Products() {\n  const navigate = useNavigate()\n  const [products, setProducts] = useState([])\n  const [pageNumber, setPageNumber] = useState(0)\n  const productsPerPage = 8\n  const visitedPages = pageNumber * productsPerPage\n\n  const [input, setInput] = useState(\"\")\n  const [output, setOutput] = useState([])\n  let { search } = useParams()\n\n  const displayProducts = products.slice(visitedPages, visitedPages + productsPerPage).map((product) => {\n    return (<Product\n      key={product.prodid}\n      product={product}\n    />)\n  })\n  const displayFilteredProducts = output.map((filteredProducts) => {return\n    <Col key={filteredProducts.prodid}>\n      <Card style={{ width: '18rem' }}>\n        <Card.Img style={{ width: '18rem', height: '18rem' }} variant=\"top\" src={'http://localhost:5000/images/' + filteredProducts.img} />\n        <Card.Body>\n          <Card.Title>{filteredProducts.product}</Card.Title>\n          <Link to={`/products/${filteredProducts.prodid}`}>\n            <Button variant=\"primary\" >View</Button>\n          </Link  >\n        </Card.Body>\n      </Card>\n\n\n    </Col>\n  })\n\n\n  useEffect(() => {\n    Axios.get('/products')\n      .then((res) => {\n        setProducts(res.data.data.products)\n      });\n  }, [])\n\n  const pageCount = Math.ceil(products.length / productsPerPage)\n  const pageChange = ({ selected }) => {\n    setPageNumber(selected)\n  }\n  search = input;\n  useEffect(() => {\n    Axios.get(`/products/input/${search}`)\n      .then((res) => {\n        setOutput(res.data.data.filteredProducts)\n\n      });\n  }, [input])\n\n  return (\n    <>\n\n      <Header title=''>\n        <Row>\n          <FormControl\n            style={{ width: \"1000px\", marginLeft: \"10%\", display: \"flex\" }}\n            className=\"search\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={e => setInput(e.target.value.toLowerCase())}\n          />\n        </Row>\n        <CardGroup style={{ display: 'flex', flexDirection: 'row' }}>\n          <Row >\n            {input.length === 0\n              ? <>{displayProducts}</>\n              : <>{console.log(output)}\n                {displayFilteredProducts}\n              </>}\n          </Row>\n        </CardGroup>\n        <ReactPaginate breakClassName={'page-item'}\n          breakLinkClassName={'page-link'}\n          containerClassName={'pagination'}\n          pageClassName={'page-item'}\n          pageLinkClassName={'page-link'}\n          previousClassName={'page-item'}\n          previousLinkClassName={'page-link'}\n          nextClassName={'page-item'}\n          nextLinkClassName={'page-link'}\n          activeClassName={'active'}\n          pageCount={pageCount}\n          onPageChange={pageChange} />\n      </Header>\n    </>);\n}\n\n"]},"metadata":{},"sourceType":"module"}