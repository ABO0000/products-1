{"ast":null,"code":"var _jsxFileName = \"/home/user/test-project/client/src/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from 'react-paginate';\nimport React, { useEffect, useState } from 'react';\nimport { CardGroup, Row, FormControl } from 'react-bootstrap';\nimport Header from './Header';\nimport './components/Topbar/bootstrap.min.css';\nimport Axios from \"axios\";\nimport Product from \"./Product\";\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Products() {\n  _s();\n\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const productsPerPage = 8;\n  const visitedPages = pageNumber * productsPerPage;\n  const [search, setInput] = useState(\"\");\n  const [output, setOutput] = useState([]);\n  search = useParams();\n  const displayProducts = products.slice(visitedPages, visitedPages + productsPerPage).map(product => {\n    return /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, product.prodid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  useEffect(() => {\n    Axios.get('/products').then(res => {\n      setProducts(res.data.data.products);\n    });\n  }, []);\n  const pageCount = Math.ceil(products.length / productsPerPage);\n\n  const pageChange = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  useEffect(() => {\n    Axios.get(`/products/input/${input}`).then(res => {\n      setOutput(res.data.data.filteredProducts);\n      console.log(input);\n    });\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      title: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            width: \"1000px\",\n            marginLeft: \"10%\",\n            display: \"flex\"\n          },\n          className: \"search\",\n          type: \"search\",\n          placeholder: \"Search\",\n          \"aria-label\": \"Search\",\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardGroup, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: displayProducts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakClassName: 'page-item',\n        breakLinkClassName: 'page-link',\n        containerClassName: 'pagination',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        previousClassName: 'page-item',\n        previousLinkClassName: 'page-link',\n        nextClassName: 'page-item',\n        nextLinkClassName: 'page-link',\n        activeClassName: 'active',\n        pageCount: pageCount,\n        onPageChange: pageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Products, \"JuJJBdWy87smi345bpzcxKKIJjQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/user/test-project/client/src/Products.jsx"],"names":["ReactPaginate","React","useEffect","useState","CardGroup","Row","FormControl","Header","Axios","Product","useParams","useNavigate","Products","navigate","products","setProducts","pageNumber","setPageNumber","productsPerPage","visitedPages","search","setInput","output","setOutput","displayProducts","slice","map","product","prodid","get","then","res","data","pageCount","Math","ceil","length","pageChange","selected","input","filteredProducts","console","log","width","marginLeft","display","e","target","value","flexDirection"],"mappings":"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","sourcesContent":["import ReactPaginate from 'react-paginate'\nimport React, { useEffect, useState } from 'react'\nimport { CardGroup, Row, FormControl } from 'react-bootstrap';\nimport Header from './Header';\nimport './components/Topbar/bootstrap.min.css';\nimport Axios from \"axios\";\nimport Product from \"./Product\";\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function Products() {\n  const navigate = useNavigate()\n  const [products, setProducts] = useState([])\n  const [pageNumber, setPageNumber] = useState(0)\n  const productsPerPage = 8\n  const visitedPages = pageNumber * productsPerPage\n\n  const [search, setInput] = useState(\"\")\n  const [output, setOutput] = useState([])\n  search  = useParams()\n\n  const displayProducts = products.slice(visitedPages, visitedPages + productsPerPage).map((product) => {\n    return (<Product\n      key={product.prodid}\n      product={product}\n    />)\n  })\n\n  useEffect(() => {\n    Axios.get('/products')\n      .then((res) => {\n        setProducts(res.data.data.products)\n      });\n  }, [])\n\n  const pageCount = Math.ceil(products.length / productsPerPage)\n  const pageChange = ({ selected }) => {\n    setPageNumber(selected)\n  }\n  \n  useEffect(() => {\n    Axios.get(`/products/input/${input}`)\n      .then((res) => {\n        setOutput(res.data.data.filteredProducts)\n       console.log(input);\n      });\n  }, [input])\n\n  return (\n    <>\n\n      <Header title=''>\n        <Row>\n          <FormControl\n            style={{ width: \"1000px\", marginLeft: \"10%\", display: \"flex\" }}\n            className=\"search\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={e => setInput(e.target.value)}\n          />\n        </Row>\n        <CardGroup style={{ display: 'flex', flexDirection: 'row' }}>\n          <Row >\n            {displayProducts}\n          </Row>\n        </CardGroup>\n        <ReactPaginate breakClassName={'page-item'}\n          breakLinkClassName={'page-link'}\n          containerClassName={'pagination'}\n          pageClassName={'page-item'}\n          pageLinkClassName={'page-link'}\n          previousClassName={'page-item'}\n          previousLinkClassName={'page-link'}\n          nextClassName={'page-item'}\n          nextLinkClassName={'page-link'}\n          activeClassName={'active'}\n          pageCount={pageCount}\n          onPageChange={pageChange} />\n      </Header>\n    </>);\n}\n\n"]},"metadata":{},"sourceType":"module"}