{"ast":null,"code":"var _jsxFileName = \"/home/user/test-project/client/src/Review.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport { Table } from 'react-bootstrap';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reviews() {\n  _s();\n\n  const [reviews, setReview] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const reviewsPerPage = 10;\n  const visitedPages = pageNumber * reviewsPerPage;\n  const displayReview = reviews.slice(visitedPages, visitedPages + reviewsPerPage).map(review => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: review.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: review.user_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: review.product_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: review.review\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: review.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, review.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  });\n  const pageCount = Math.ceil(reviews.length / reviewsPerPage);\n\n  const pageChange = _ref => {\n    let {\n      selected\n    } = _ref;\n    setPageNumber(selected);\n  };\n\n  useEffect(() => {\n    Axios.get('/reviews').then(response => {\n      setReview(response.data.data.reviews);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    title: \"Users list\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reviews.map(review => {})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakClassName: 'page-item',\n      breakLinkClassName: 'page-link',\n      containerClassName: 'pagination',\n      pageClassName: 'page-item',\n      pageLinkClassName: 'page-link',\n      previousClassName: 'page-item',\n      previousLinkClassName: 'page-link',\n      nextClassName: 'page-item',\n      nextLinkClassName: 'page-link',\n      activeClassName: 'active',\n      pageCount: pageCount,\n      onPageChange: pageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"PJc1eRsP0calTVriXVeNZdlgdvQ=\");\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/home/user/test-project/client/src/Review.jsx"],"names":["React","useEffect","useState","Header","Table","Axios","Reviews","reviews","setReview","pageNumber","setPageNumber","reviewsPerPage","visitedPages","displayReview","slice","map","review","id","user_id","product_id","comment","pageCount","Math","ceil","length","pageChange","selected","get","then","response","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Header from './Header'\nimport { Table } from 'react-bootstrap';\nimport Axios from 'axios';\n\nexport default function Reviews() {\n  const [reviews, setReview] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0)\n  const reviewsPerPage = 10\n  const visitedPages = pageNumber * reviewsPerPage\n\n  const displayReview = reviews.slice(visitedPages, visitedPages + reviewsPerPage).map((review) => {\n    return (\n    <tr key={review.id} >\n      <td>{review.id}</td>\n      <td>{review.user_id}</td>\n      <td>{review.product_id}</td>\n      <td>{review.review}</td>\n      <td>{review.comment}</td>\n    </tr>)\n  })\n  const pageCount = Math.ceil(reviews.length / reviewsPerPage)\n  const pageChange = ({ selected }) => {\n    setPageNumber(selected)\n  }\n  useEffect(() => {\n    Axios.get('/reviews')\n      .then((response) => {\n        setReview(response.data.data.reviews)\n      });\n  }, [])\n \n  return (\n    <Header title='Users list'>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>User id</th>\n            <th>Product id</th>\n            <th>review</th>\n            <th>comment</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reviews.map((review) => {\n\n          })}\n\n        </tbody>\n      </Table>\n      <ReactPaginate breakClassName={'page-item'}\n        breakLinkClassName={'page-link'}\n        containerClassName={'pagination'}\n        pageClassName={'page-item'}\n        pageLinkClassName={'page-link'}\n        previousClassName={'page-item'}\n        previousLinkClassName={'page-link'}\n        nextClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        activeClassName={'active'}\n        pageCount={pageCount}\n        onPageChange={pageChange} />\n    </Header>\n  )\n}"]},"metadata":{},"sourceType":"module"}